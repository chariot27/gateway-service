spring.application.name=gateway-service

jwt.secret=${JWT_SECRET}
# Porta do gateway
server.port=${SERVER_PORT:8087}

# Timeouts para chamadas HTTP reativas (opcional)
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=5000ms

spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

eureka.client.service-url.defaultZone=${EUREKA_SERVER}

spring.cloud.gateway.routes[0].id=${GATEWAY_ROUTE_ID}
spring.cloud.gateway.routes[0].uri=${GATEWAY_ROUTE_URI}
spring.cloud.gateway.routes[0].predicates[0]=${GATEWAY_ROUTE_PREDICATES}
spring.cloud.gateway.routes[0].filters[0]=${GATEWAY_ROUTE_FILTERS}

spring.cloud.gateway.routes[1].id=${MATCH_ROUTE_ID}
spring.cloud.gateway.routes[1].uri=${MATCH_ROUTE_URI}
spring.cloud.gateway.routes[1].predicates[0]=${MATCH_ROUTE_PREDICATES}
spring.cloud.gateway.routes[1].filters[0]=${MATCH_ROUTE_FILTERS}
spring.cloud.gateway.routes[1].filters[1]=CircuitBreaker=name=matchCircuitBreaker,fallbackUri=forward:/fallback/match

spring.cloud.gateway.routes[2].id=${ACEITAR_MATCH_ROUTE_ID}
spring.cloud.gateway.routes[2].uri=${ACEITAR_MATCH_ROUTE_URI}
spring.cloud.gateway.routes[2].predicates[0]=${ACEITAR_MATCH_ROUTE_PREDICATES}
spring.cloud.gateway.routes[2].filters[0]=${ACEITAR_MATCH_ROUTE_FILTERS}
spring.cloud.gateway.routes[2].filters[1]=CircuitBreaker=name=aceitarMatchCB,fallbackUri=forward:/fallback/match

spring.cloud.gateway.routes[3].id=${CREATE-CHECKOUT-SESSION_ROUTE_ID}
spring.cloud.gateway.routes[3].uri=${CREATE-CHECKOUT-SESSION_ROUTE_URI}
spring.cloud.gateway.routes[3].predicates[0]=${CREATE-CHECKOUT-SESSION_ROUTE_PREDICATES}
spring.cloud.gateway.routes[3].filters[0]=${CREATE-CHECKOUT-SESSION_ROUTE_FILTERS}
spring.cloud.gateway.routes[3].filters[1]=CircuitBreaker=name=checkoutCB,fallbackUri=forward:/fallback/checkou

spring.cloud.gateway.routes[4].id=${WEBHOOK_ROUTE_ID}
spring.cloud.gateway.routes[4].uri=${WEBHOOK_ROUTE_URI}
spring.cloud.gateway.routes[4].predicates[0]=${WEBHOOK_ROUTE_PREDICATES}
spring.cloud.gateway.routes[4].filters[0]=${WEBHOOK_ROUTE_FILTERS}

spring.cloud.gateway.routes[5].id=${ASSINATURA_CREATE_ROUTE_ID}
spring.cloud.gateway.routes[5].uri=${ASSINATURA_CREATE_ROUTE_URI}
spring.cloud.gateway.routes[5].predicates[0]=${ASSINATURA_CREATE_ROUTE_PREDICATES}
spring.cloud.gateway.routes[5].filters[0]=${ASSINATURA_CREATE_ROUTE_FILTERS}
spring.cloud.gateway.routes[5].filters[1]=CircuitBreaker=name=assinaturaCreateCB,fallbackUri=forward:/fallback/subscription

spring.cloud.gateway.routes[6].id=${ASSINATURA_LISTAR_ROUTE_ID}
spring.cloud.gateway.routes[6].uri=${ASSINATURA_LISTAR_ROUTE_URI}
spring.cloud.gateway.routes[6].predicates[0]=${ASSINATURA_LISTAR_ROUTE_PREDICATES}
spring.cloud.gateway.routes[6].filters[0]=${ASSINATURA_LISTAR_ROUTE_FILTERS}
spring.cloud.gateway.routes[6].filters[1]=Retry=name=assinaturaListRetry,retries=3,methods=GET,backoff=200ms
spring.cloud.gateway.routes[6].filters[2]=CircuitBreaker=name=assinaturaListCB,fallbackUri=forward:/fallback/subscription

spring.cloud.gateway.routes[7].id=${ASSINATURA_CANCELAR_ROUTE_ID}
spring.cloud.gateway.routes[7].uri=${ASSINATURA_CANCELAR_ROUTE_URI}
spring.cloud.gateway.routes[7].predicates[0]=${ASSINATURA_CANCELAR_ROUTE_PREDICATES}
spring.cloud.gateway.routes[7].filters[0]=${ASSINATURA_CANCELAR_ROUTE_FILTERS}
spring.cloud.gateway.routes[7].filters[1]=CircuitBreaker=name=assinaturaCancelCB,fallbackUri=forward:/fallback/subscription

spring.cloud.gateway.routes[8].id=${ASSINATURA_RENOVAR_ROUTE_ID}
spring.cloud.gateway.routes[8].uri=${ASSINATURA_RENOVAR_ROUTE_URI}
spring.cloud.gateway.routes[8].predicates[0]=${ASSINATURA_RENOVAR_ROUTE_PREDICATES}
spring.cloud.gateway.routes[8].filters[0]=${ASSINATURA_RENOVAR_ROUTE_FILTERS}
spring.cloud.gateway.routes[8].filters[1]=CircuitBreaker=name=assinaturaRenovarCB,fallbackUri=forward:/fallback/subscription

spring.cloud.gateway.routes[9].id=${PLANO_LISTAR_ROUTE_ID}
spring.cloud.gateway.routes[9].uri=${PLANO_LISTAR_ROUTE_URI}
spring.cloud.gateway.routes[9].predicates[0]=${PLANO_LISTAR_ROUTE_PREDICATES}
spring.cloud.gateway.routes[9].filters[0]=${PLANO_LISTAR_ROUTE_FILTERS}

spring.cloud.gateway.routes[10].id=${USER_REGISTER_ROUTE_ID}
spring.cloud.gateway.routes[10].uri=${USER_REGISTER_ROUTE_URI}
spring.cloud.gateway.routes[10].predicates[0]=${USER_REGISTER_ROUTE_PREDICATES}
spring.cloud.gateway.routes[10].filters[0]=${USER_REGISTER_ROUTE_FILTERS}
spring.cloud.gateway.routes[10].filters[1]=Retry=name=userRegisterRetry,retries=3,methods=GET,backoff=200ms
spring.cloud.gateway.routes[10].filters[2]=CircuitBreaker=name=userRegisterCircuitBreaker,fallbackUri=forward:/fallback/user

spring.cloud.gateway.routes[11].id=${USER_LOGIN_ROUTE_ID}
spring.cloud.gateway.routes[11].uri=${USER_LOGIN_ROUTE_URI}
spring.cloud.gateway.routes[11].predicates[0]=${USER_LOGIN_ROUTE_PREDICATES}
spring.cloud.gateway.routes[11].filters[0]=${USER_LOGIN_ROUTE_FILTERS}
spring.cloud.gateway.routes[11].filters[1]=Retry=name=userLoginRetry,retries=3,methods=GET,backoff=200ms
spring.cloud.gateway.routes[11].filters[2]=CircuitBreaker=name=userLoginCircuitBreaker,fallbackUri=forward:/fallback/user

spring.cloud.gateway.routes[12].id=${USER_GET_ROUTE_ID}
spring.cloud.gateway.routes[12].uri=${USER_GET_ROUTE_URI}
spring.cloud.gateway.routes[12].predicates[0]=${USER_GET_ROUTE_PREDICATES}
spring.cloud.gateway.routes[12].filters[0]=${USER_GET_ROUTE_FILTERS}
spring.cloud.gateway.routes[12].filters[1]=Retry=name=userGetRetry,retries=3,methods=GET,backoff=200ms
spring.cloud.gateway.routes[12].filters[2]=CircuitBreaker=name=userGetCircuitBreaker,fallbackUri=forward:/fallback/user

spring.cloud.gateway.routes[13].id=${USER_DELETE_ROUTE_ID}
spring.cloud.gateway.routes[13].uri=${USER_DELETE_ROUTE_URI}
spring.cloud.gateway.routes[13].predicates[0]=${USER_DELETE_ROUTE_PREDICATES}
spring.cloud.gateway.routes[13].filters[0]=${USER_DELETE_ROUTE_FILTERS}
spring.cloud.gateway.routes[13].filters[1]=CircuitBreaker=name=userDeleteCircuitBreaker,fallbackUri=forward:/fallback/user

spring.cloud.gateway.routes[14].id=${VIDEO_LIST_ROUTE_ID}
spring.cloud.gateway.routes[14].uri=${VIDEO_LIST_ROUTE_URI}
spring.cloud.gateway.routes[14].predicates[0]=${VIDEO_LIST_ROUTE_PREDICATES}
spring.cloud.gateway.routes[14].filters[0]=${VIDEO_LIST_ROUTE_FILTERS}

spring.cloud.gateway.routes[15].id=${VIDEO_GET_ROUTE_ID}
spring.cloud.gateway.routes[15].uri=${VIDEO_GET_ROUTE_URI}
spring.cloud.gateway.routes[15].predicates[0]=${VIDEO_GET_ROUTE_PREDICATES}
spring.cloud.gateway.routes[15].filters[0]=${VIDEO_GET_ROUTE_FILTERS}

spring.cloud.gateway.routes[16].id=${VIDEO_UPLOAD_ROUTE_ID}
spring.cloud.gateway.routes[16].uri=${VIDEO_UPLOAD_ROUTE_URI}
spring.cloud.gateway.routes[16].predicates[0]=${VIDEO_UPLOAD_ROUTE_PREDICATES}
spring.cloud.gateway.routes[16].filters[0]=${VIDEO_UPLOAD_ROUTE_FILTERS}

spring.cloud.gateway.routes[17].id=${VIDEO_DELETE_ROUTE_ID}
spring.cloud.gateway.routes[17].uri=${VIDEO_DELETE_ROUTE_URI}
spring.cloud.gateway.routes[17].predicates[0]=${VIDEO_DELETE_ROUTE_PREDICATES}
spring.cloud.gateway.routes[17].filters[0]=${VIDEO_DELETE_ROUTE_FILTERS}

spring.cloud.gateway.routes[18].id=${VIDEO_OPTIMIZE_ROUTE_ID}
spring.cloud.gateway.routes[18].uri=${VIDEO_OPTIMIZE_ROUTE_URI}
spring.cloud.gateway.routes[18].predicates[0]=${VIDEO_OPTIMIZE_ROUTE_PREDICATES}
spring.cloud.gateway.routes[18].filters[0]=${VIDEO_OPTIMIZE_ROUTE_FILTERS}

spring.cloud.gateway.routes[19].id=${APPOINTMENT_CREATE_ROUTE_ID}
spring.cloud.gateway.routes[19].uri=${APPOINTMENT_CREATE_ROUTE_URI}
spring.cloud.gateway.routes[19].predicates[0]=${APPOINTMENT_CREATE_ROUTE_PREDICATES}
spring.cloud.gateway.routes[19].filters[0]=${APPOINTMENT_CREATE_ROUTE_FILTERS}

spring.cloud.gateway.routes[20].id=${APPOINTMENT_LIST_ROUTE_ID}
spring.cloud.gateway.routes[20].uri=${APPOINTMENT_LIST_ROUTE_URI}
spring.cloud.gateway.routes[20].predicates[0]=${APPOINTMENT_LIST_ROUTE_PREDICATES}
spring.cloud.gateway.routes[20].filters[0]=${APPOINTMENT_LIST_ROUTE_FILTERS}

spring.cloud.gateway.routes[21].id=${APPOINTMENT_GET_ROUTE_ID}
spring.cloud.gateway.routes[21].uri=${APPOINTMENT_GET_ROUTE_URI}
spring.cloud.gateway.routes[21].predicates[0]=${APPOINTMENT_GET_ROUTE_PREDICATES}
spring.cloud.gateway.routes[21].filters[0]=${APPOINTMENT_GET_ROUTE_FILTERS}

spring.cloud.gateway.routes[22].id=${APPOINTMENT_CONFIRM_CONSULTOR_ROUTE_ID}
spring.cloud.gateway.routes[22].uri=${APPOINTMENT_CONFIRM_CONSULTOR_ROUTE_URI}
spring.cloud.gateway.routes[22].predicates[0]=${APPOINTMENT_CONFIRM_CONSULTOR_ROUTE_PREDICATES}
spring.cloud.gateway.routes[22].filters[0]=${APPOINTMENT_CONFIRM_CONSULTOR_ROUTE_FILTERS}

spring.cloud.gateway.routes[23].id=${APPOINTMENT_CONFIRM_PROFISSIONAL_ROUTE_ID}
spring.cloud.gateway.routes[23].uri=${APPOINTMENT_CONFIRM_PROFISSIONAL_ROUTE_URI}
spring.cloud.gateway.routes[23].predicates[0]=${APPOINTMENT_CONFIRM_PROFISSIONAL_ROUTE_PREDICATES}
spring.cloud.gateway.routes[23].filters[0]=${APPOINTMENT_CONFIRM_PROFISSIONAL_ROUTE_FILTERS}

spring.cloud.gateway.routes[24].id=${APPOINTMENT_CANCEL_ROUTE_ID}
spring.cloud.gateway.routes[24].uri=${APPOINTMENT_CANCEL_ROUTE_URI}
spring.cloud.gateway.routes[24].predicates[0]=${APPOINTMENT_CANCEL_ROUTE_PREDICATES}
spring.cloud.gateway.routes[24].filters[0]=${APPOINTMENT_CANCEL_ROUTE_FILTERS}

spring.cloud.gateway.routes[25].id=${APPOINTMENT_RESCHEDULE_ROUTE_ID}
spring.cloud.gateway.routes[25].uri=${APPOINTMENT_RESCHEDULE_ROUTE_URI}
spring.cloud.gateway.routes[25].predicates[0]=${APPOINTMENT_RESCHEDULE_ROUTE_PREDICATES}
spring.cloud.gateway.routes[25].filters[0]=${APPOINTMENT_RESCHEDULE_ROUTE_FILTERS}

spring.cloud.gateway.routes[26].id=${EMAIL_SUCESS_ROUTE_ID}
spring.cloud.gateway.routes[26].uri=${EMAIL_SUCESS_ROUTE_URI}
spring.cloud.gateway.routes[26].predicates[0]=${EMAIL_SUCESS_ROUTE_PREDICATES}
spring.cloud.gateway.routes[26].filters[0]=${EMAIL_SUCESS_ROUTE_FILTERS}

spring.cloud.gateway.routes[27].id=${EMAIL_FAIL_ROUTE_ID}
spring.cloud.gateway.routes[27].uri=${EMAIL_FAIL_ROUTE_URI}
spring.cloud.gateway.routes[27].predicates[0]=${EMAIL_FAIL_ROUTE_PREDICATES}
spring.cloud.gateway.routes[27].filters[0]=${EMAIL_FAIL_ROUTE_FILTERS}


# Logging para debug de rotas
logging.level.org.springframework.cloud.gateway=${LOGGING_LEVEL}
#logging.level.org.springframework.cloud.gateway=DEBUG